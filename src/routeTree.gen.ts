/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RenderRouteImport } from './routes/render'
import { Route as FormBuilderRouteImport } from './routes/form-builder'
import { Route as BuilderRouteImport } from './routes/builder'
import { Route as IndexRouteImport } from './routes/index'

const RenderRoute = RenderRouteImport.update({
  id: '/render',
  path: '/render',
  getParentRoute: () => rootRouteImport,
} as any)
const FormBuilderRoute = FormBuilderRouteImport.update({
  id: '/form-builder',
  path: '/form-builder',
  getParentRoute: () => rootRouteImport,
} as any)
const BuilderRoute = BuilderRouteImport.update({
  id: '/builder',
  path: '/builder',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/builder': typeof BuilderRoute
  '/form-builder': typeof FormBuilderRoute
  '/render': typeof RenderRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/builder': typeof BuilderRoute
  '/form-builder': typeof FormBuilderRoute
  '/render': typeof RenderRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/builder': typeof BuilderRoute
  '/form-builder': typeof FormBuilderRoute
  '/render': typeof RenderRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/builder' | '/form-builder' | '/render'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/builder' | '/form-builder' | '/render'
  id: '__root__' | '/' | '/builder' | '/form-builder' | '/render'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BuilderRoute: typeof BuilderRoute
  FormBuilderRoute: typeof FormBuilderRoute
  RenderRoute: typeof RenderRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/render': {
      id: '/render'
      path: '/render'
      fullPath: '/render'
      preLoaderRoute: typeof RenderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/form-builder': {
      id: '/form-builder'
      path: '/form-builder'
      fullPath: '/form-builder'
      preLoaderRoute: typeof FormBuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/builder': {
      id: '/builder'
      path: '/builder'
      fullPath: '/builder'
      preLoaderRoute: typeof BuilderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BuilderRoute: BuilderRoute,
  FormBuilderRoute: FormBuilderRoute,
  RenderRoute: RenderRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
